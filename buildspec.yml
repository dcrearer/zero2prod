version: 0.2
phases:
  install:
    commands:
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - . ~/.cargo/env
      - rustup default 1.90.0
      - cargo install sqlx-cli --no-default-features --features postgres
      # Install Trivy
      - apt-get update
      - apt-get install -y wget apt-transport-https gnupg
      - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | apt-key add -
      - echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | tee -a /etc/apt/sources.list.d/trivy.list
      - apt-get update
      - apt-get install -y trivy
  pre_build:
    commands:
      - docker run -d --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=password public.ecr.aws/docker/library/postgres:13
      - sleep 15
      - export DATABASE_URL=postgres://postgres:password@localhost:5432/postgres
      - sqlx database create --database-url postgres://postgres:password@localhost:5432/newsletter
      - export DATABASE_URL=postgres://postgres:password@localhost:5432/newsletter
      - sqlx migrate run
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME .
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - echo Scanning image with Trivy...
      - trivy --no-progress --exit-code 0 --severity HIGH,CRITICAL $IMAGE_REPO_NAME:latest
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
